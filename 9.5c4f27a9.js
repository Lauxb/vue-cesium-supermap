webpackJsonp([9],{"5Iml":function(e,t,o){e.exports=o("9tGn")},"9tGn":function(e,t,o){var v=o("VU/8")(null,o("usI9"),null,null);e.exports=v.exports},usI9:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},staticRenderFns:[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("section",[o("h1",[e._v("SmViewer")]),e._v(" "),o("p",[o("code",[e._v("SmViewer")]),e._v(" is a container of Cesium core class and instance. It's the root component of other components of vue-cesium-supermap."),o("br"),e._v("\nThe container is an empty DOM node which used to mount other components or DOM nodes.")]),e._v(" "),o("h2",[e._v("Instance Properties")]),e._v(" "),o("h3",[e._v("Static Properties")]),e._v(" "),o("p",[e._v("仅且可以初始化配置，不支持响应式。")]),e._v(" "),o("hr"),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Name")]),e._v(" "),o("th",[e._v("Type")]),e._v(" "),o("th",[e._v("Default")]),e._v(" "),o("th",[e._v("Description")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("navigationInstructionsInitiallyVisible")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" True if the navigation instructions should initially be visible, or false if the should not be shown until the user explicitly clicks the button.")])]),e._v(" "),o("tr",[o("td",[e._v("scene3DOnly")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" When true, each geometry instance will only be rendered in 3D to save GPU memory.")])]),e._v(" "),o("tr",[o("td",[e._v("clockViewModel")]),e._v(" "),o("td",[e._v("ClockViewModel")]),e._v(" "),o("td",[e._v("new ClockViewModel(options.clock)")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The clock view model to use to control current time.")])]),e._v(" "),o("tr",[o("td",[e._v("selectedImageryProviderViewModel")]),e._v(" "),o("td",[e._v("ProviderViewModel")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The view model for the current base imagery layer, if not supplied the first available base layer is used. This value is only valid if options.baseLayerPicker is set to true.")])]),e._v(" "),o("tr",[o("td",[e._v("imageryProviderViewModels")]),e._v(" "),o("td",[e._v("Array.<ProviderViewModel>")]),e._v(" "),o("td",[e._v("createDefaultImageryProviderViewModels()")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The array of ProviderViewModels to be selectable from the BaseLayerPicker. This value is only valid if options.baseLayerPicker is set to true.")])]),e._v(" "),o("tr",[o("td",[e._v("selectedTerrainProviderViewModel")]),e._v(" "),o("td",[e._v("ProviderViewModel")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The view model for the current base terrain layer, if not supplied the first available base layer is used. This value is only valid if options.baseLayerPicker is set to true.")])]),e._v(" "),o("tr",[o("td",[e._v("terrainProviderViewModels")]),e._v(" "),o("td",[e._v("Array.<ProviderViewModel>")]),e._v(" "),o("td",[e._v("createDefaultTerrainProviderViewModels()")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The array of ProviderViewModels to be selectable from the BaseLayerPicker. This value is only valid if options.baseLayerPicker is set to true.")])]),e._v(" "),o("tr",[o("td",[e._v("imageryProvider")]),e._v(" "),o("td",[e._v("ImageryProvider")]),e._v(" "),o("td",[e._v("new BingMapsImageryProvider()")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The imagery provider to use. This value is only valid if options.baseLayerPicker is set to false.")])]),e._v(" "),o("tr",[o("td",[e._v("terrainProvider")]),e._v(" "),o("td",[e._v("TerrainProvider")]),e._v(" "),o("td",[e._v("new EllipsoidTerrainProvider()")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The terrain provider to use")])]),e._v(" "),o("tr",[o("td",[e._v("skyBox")]),e._v(" "),o("td",[e._v("SkyBox")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The skybox used to render the stars. When undefined, the default stars are used.")])]),e._v(" "),o("tr",[o("td",[e._v("skyAtmosphere")]),e._v(" "),o("td",[e._v("SkyAtmosphere")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" Blue sky, and the glow around the Earth's limb. Set to false to turn it off.")])]),e._v(" "),o("tr",[o("td",[e._v("fullscreenElement")]),e._v(" "),o("td",[e._v("Element | String")]),e._v(" "),o("td",[e._v("document.body")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The element or id to be placed into fullscreen mode when the full screen button is pressed.")])]),e._v(" "),o("tr",[o("td",[e._v("useDefaultRenderLoop")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" True if this widget should control the render loop, false otherwise.")])]),e._v(" "),o("tr",[o("td",[e._v("targetFrameRate")]),e._v(" "),o("td",[e._v("Number")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The target frame rate when using the default render loop.")])]),e._v(" "),o("tr",[o("td",[e._v("showRenderLoopErrors")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If true, this widget will automatically display an HTML panel to the user containing the error, if a render loop error occurs.")])]),e._v(" "),o("tr",[o("td",[e._v("automaticallyTrackDataSourceClocks")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If true, this widget will automatically track the clock settings of newly added DataSources, updating if the DataSource's clock changes. Set this to false if you want to configure the clock independently.")])]),e._v(" "),o("tr",[o("td",[e._v("contextOptions")]),e._v(" "),o("td",[e._v("Object")]),e._v(" "),o("td",[o("code",[e._v("optional")])]),e._v(" "),o("td",[e._v("Context and WebGL creation properties corresponding to options passed to Scene.")])]),e._v(" "),o("tr",[o("td",[e._v("mapProjection")]),e._v(" "),o("td",[e._v("MapProjection")]),e._v(" "),o("td",[e._v("new GeographicProjection()")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The map projection to use in 2D and Columbus View modes.")])]),e._v(" "),o("tr",[o("td",[e._v("globe")]),e._v(" "),o("td",[e._v("Globe")]),e._v(" "),o("td",[e._v("new Globe(mapProjection.ellipsoid)")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The globe to use in the scene. If set to false, no globe will be added.")])]),e._v(" "),o("tr",[o("td",[e._v("orderIndependentTranslucency")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If true and the configuration supports it, use order independent translucency.")])]),e._v(" "),o("tr",[o("td",[e._v("creditContainer")]),e._v(" "),o("td",[e._v("Element | String")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The DOM element or ID that will contain the CreditDisplay. If not specified, the credits are added to the bottom of the widget itself.")])]),e._v(" "),o("tr",[o("td",[e._v("creditViewport")]),e._v(" "),o("td",[e._v("Element | String")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The DOM element or ID that will contain the credit pop up created by the CreditDisplay. If not specified, it will appear over the widget itself.")])]),e._v(" "),o("tr",[o("td",[e._v("dataSources")]),e._v(" "),o("td",[e._v("DataSourceCollection")]),e._v(" "),o("td",[e._v("new DataSourceCollection()")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The collection of data sources visualized by the widget. If this parameter is provided, the instance is assumed to be owned by the caller and will not be destroyed when the viewer is destroyed.")])]),e._v(" "),o("tr",[o("td",[e._v("terrainShadows")]),e._v(" "),o("td",[e._v("ShadowMode")]),e._v(" "),o("td",[e._v("ShadowMode.RECEIVE_ONLY")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" Determines if the terrain casts or receives shadows from the sun.")])]),e._v(" "),o("tr",[o("td",[e._v("mapMode2D")]),e._v(" "),o("td",[e._v("MapMode2D")]),e._v(" "),o("td",[e._v("MapMode2D.INFINITE_SCROLL")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" Determines if the 2D map is rotatable or can be scrolled infinitely in the horizontal direction.")])]),e._v(" "),o("tr",[o("td",[e._v("requestRenderMode")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If true, rendering a frame will only occur when needed as determined by changes within the scene. Enabling improves performance of the application, but requires using Scene#requestRender to render a new frame explicitly in this mode. This will be necessary in many cases after making changes to the scene in other parts of the API. See Improving Performance with Explicit Rendering.")])]),e._v(" "),o("tr",[o("td",[e._v("maximumRenderTimeChange")]),e._v(" "),o("td",[e._v("Number")]),e._v(" "),o("td",[e._v("0.0")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If requestRenderMode is true, this value defines the maximum change in simulation time allowed before a render is requested. See Improving Performance with Explicit Rendering.")])])])]),e._v(" "),o("hr"),e._v(" "),o("h3",[e._v("Responsive Properties")]),e._v(" "),o("p",[e._v("可以初始化配置，支持响应式。")]),e._v(" "),o("hr"),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Name")]),e._v(" "),o("th",[e._v("Type")]),e._v(" "),o("th",[e._v("Default")]),e._v(" "),o("th",[e._v("Description")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("selectionIndicator")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the SelectionIndicator widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("infoBox")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the InfoBox widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("geocoder")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the Geocoder widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("homeButton")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("true")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the HomeButton widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("sceneModePicker")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the SceneModePicker widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("projectionPicker")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to true, the ProjectionPicker widget will be created.")])]),e._v(" "),o("tr",[o("td",[e._v("baseLayerPicker")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the BaseLayerPicker widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("navigationHelpButton")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the navigation help button will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("animation")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the Animation widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("timeline")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the Timeline widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("fullscreenButton")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to false, the FullscreenButton widget will not be created.")])]),e._v(" "),o("tr",[o("td",[e._v("vrButton")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to true, the VRButton widget will be created.")])]),e._v(" "),o("tr",[o("td",[e._v("navigation")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" If set to true, the Navigation widget will be created.")])]),e._v(" "),o("tr",[o("td",[e._v("sceneMode")]),e._v(" "),o("td",[e._v("SceneMode")]),e._v(" "),o("td",[e._v("SceneMode.SCENE3D")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" The initial scene mode.")])]),e._v(" "),o("tr",[o("td",[e._v("shouldAnimate")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" true if the clock should attempt to advance simulation time by default, false otherwise.")])]),e._v(" "),o("tr",[o("td",[e._v("terrainExaggeration")]),e._v(" "),o("td",[e._v("Number")]),e._v(" "),o("td",[e._v("1.0")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" A scalar used to exaggerate the terrain.")])]),e._v(" "),o("tr",[o("td",[e._v("shadows")]),e._v(" "),o("td",[e._v("Boolean")]),e._v(" "),o("td",[e._v("false")]),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" Determines if shadows are cast by the sun.")])]),e._v(" "),o("tr",[o("td",[e._v("camera")]),e._v(" "),o("td",[e._v("Object")]),e._v(" "),o("td"),e._v(" "),o("td",[o("code",[e._v("optional")]),e._v(" sets the camera of scene.")])])])]),e._v(" "),o("hr"),e._v(" "),o("h2",[e._v("事件")]),e._v(" "),o("p",[e._v("Viewer 是个基础部件，除了能够响应自己的事件外，把 dataSources, entities, imageryLayers, scene 等属性的事件也挂这儿，方便使用。")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("事件名")]),e._v(" "),o("th",[e._v("参数")]),e._v(" "),o("th",[e._v("描述")]),e._v(" "),o("th",[e._v("来源")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("selectedEntityChanged")]),e._v(" "),o("td",[e._v("Entity")]),e._v(" "),o("td",[e._v("场景选中实体发生改变时触发此事件。")]),e._v(" "),o("td",[e._v("Viewer")])]),e._v(" "),o("tr",[o("td",[e._v("trackedEntityChanged")]),e._v(" "),o("td",[e._v("Entity")]),e._v(" "),o("td",[e._v("场景跟踪实体发生改变时触发此事件。")]),e._v(" "),o("td",[e._v("Viewer")])]),e._v(" "),o("tr",[o("td",[e._v("dataSourceAdded")]),e._v(" "),o("td",[e._v("DataSource")]),e._v(" "),o("td",[e._v("场景添加一个数据源时触发此事件。")]),e._v(" "),o("td")])])])])}]}}});